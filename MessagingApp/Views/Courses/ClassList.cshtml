@model MessagingApp.Models.ClassListViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Class List - MessagingApp</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/classlist.css" asp-append-version="true" />
</head>
<body>
    <div class="class-list-container">
        <!-- Back button -->
        <div class="d-flex align-items-center justify-content-center position-relative">
            <a href="javascript:history.back()" class="btn btn-link back-button">
                <i class="bi bi-arrow-left fs-3"></i>
            </a>
            <h2 class="course-title mx-auto">@Model.Course.Name</h2>
        </div>

        <!-- Start Group Chat Button (hidden until 2+ students are selected) -->
        <button id="startGroupChat" class="group-chat-btn btn btn-primary">Start Group Chat</button>

        <!-- Instructor Section -->
        <div class="p-2 text-center section-header">Instructor</div>
        <div class="name-label">First/Last Name</div>
        <div class="user-container">
            <div class="user">@Model.Instructor.Name</div>
        </div>

        <!-- Students Section -->
        <div class="p-2 text-center section-header">Students In Course</div>
        <div class="name-label">First/Last Name</div>
        <div class="students-container">
            @foreach (var student in Model.Students)
            {
                <a asp-action="Index"
                   asp-controller="Messaging"
                   asp-route-studentId="@student.UserId"
                   asp-route-studentName="@student.Name"
                   class="text-decoration-none full-row-link">
                    <div class="user-container student-row">
                        <input type="checkbox" class="student-checkbox" value="@student.UserId" data-studentname="@student.Name" />
                        <div class="user">@student.Name</div>
                    </div>
                </a>
            }

        </div>
    </div>

    @Html.Partial("RecentConversations")

    <!-- Group Chat Modal -->
    <div id="gcModal" class="modal-overlay">
        <div class="modal-content">
            <h2>New Group Chat</h2>
            <input type="text" id="gcName" placeholder="Enter group chat name" />
            <div class="selected-users" id="selectedUsers"></div>
            <div class="modal-buttons">
                <button id="gcConfirm" class="btn-GCconfirm">Create</button>
                <button id="gcCancel" class="btn-GCcancel">Cancel</button>
            </div>
        </div>
    </div>

    <script>
        function updateGroupChatButton() {
            const checkboxes = document.querySelectorAll('.student-checkbox:checked');
            document.getElementById('startGroupChat').style.display = checkboxes.length >= 2 ? 'block' : 'none';
        }

        function updateRowHighlighting() {
            document.querySelectorAll('.student-row').forEach(row => {
                const checkbox = row.querySelector('.student-checkbox');
                row.classList.toggle('selected-row', checkbox.checked);
            });
        }

        function updateSelectedUsersDisplay() {
            const selectedCheckboxes = document.querySelectorAll('.student-checkbox:checked');
            const names = Array.from(selectedCheckboxes).map(chk => chk.getAttribute('data-studentname'));
            document.getElementById('selectedUsers').textContent = "Participants: " + names.join(', ');
        }

        document.querySelectorAll('.student-checkbox').forEach(chk => {
            chk.addEventListener('change', function () {
                updateGroupChatButton();
                updateRowHighlighting();
            });
        });

        document.getElementById('startGroupChat').addEventListener('click', function () {
            updateSelectedUsersDisplay();
            document.getElementById('gcModal').style.display = 'flex';
        });

        document.getElementById('gcCancel').addEventListener('click', function () {
            document.getElementById('gcModal').style.display = 'none';
        });

        document.getElementById('gcConfirm').addEventListener('click', function () {
            const gcName = document.getElementById('gcName').value.trim();
            if (!gcName) {
                alert('Please enter a group chat name.');
                return;
            }
            const selectedIds = Array.from(document.querySelectorAll('.student-checkbox:checked'))
                .map(chk => chk.value);
            console.log('Creating Group Chat:', gcName, 'with participants:', selectedIds);
            document.getElementById('gcModal').style.display = 'none';
            document.getElementById('gcName').value = "";
        });
    </script>
</body>
</html>
